@use "vars";
@use "sass:color";
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap');

*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;

}

a{
  text-decoration: none;
  color: inherit;
}

body{
  font-family: "Roboto", sans-serif;
  background-color: hsl(0, 0%, 95%);
}

.icon{
  font-size: 2rem;
}


.field {
  width: 100%;
  position: relative;
  margin-bottom: 1rem;

  &-input {
      width: 100%;
      padding: .7em;
      font-size: 1em;
      outline: none;
      border: 1px solid #333;
      border-radius: 1rem;
      height: 2.5em;
      color: #333;

      &::placeholder {
          color: vars.$color;
      }

      &:focus {
          border-color: vars.$color ;

          &+.field-label {
              color: vars.$color;

          }
      }
  }

  &-label {
      display: none;
      position: absolute;
      top: .2rem;
      left: .7rem;
      color: #999;
      font-size: .7em;
      text-transform: uppercase;
      animation: labelSlideUpAndShow .3s;
  }


  &--has-content {
      .field-label {
          display: block;
      }

      .field-input {
          padding: 1.4em .7em .4em;
      }
  }

  @keyframes labelSlideUpAndShow {
    0% {
        transform: translateY(1em);
        opacity: 0;
    }
  
    100% {
        transform: translateY(0em);
        opacity: 1;
    }
  }
}


.select{
  margin-bottom: 1rem;
  height: 3rem;
  display: flex;
  flex-direction: column;
  &--label{
    padding-left: .2rem;
    color: vars.$color;
    font-size: 1em;
    margin-bottom: .3rem;
  }

  &--select{
    padding: .4em;
    font-size: 1em;
    outline: none;
    border: 1px solid #333;
    border-radius: 1rem;
    height: 2.5em;
    color: #333;

    &:focus {
      border-color: vars.$color;
     }
  }

  &--option{
   color: vars.$color;
   }
}


button{
  padding: 1rem;
  color: white;
  font-weight: bold;
  background-color: transparentize(vars.$color, 0.5);
  border: none;
  font-size: 1rem;
  border-radius: 1rem;
  margin: 0 auto;

  &:hover{
    background-color: vars.$color;
    cursor: pointer;
  }

  &:disabled{
    cursor: not-allowed;
    background-color: gray;
  }
}